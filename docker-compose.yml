

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: seo_timeline_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: seo_timeline
      MYSQL_USER: seo_user
      MYSQL_PASSWORD: seo_password
    ports:
      - "13306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database_schema.sql:/docker-entrypoint-initdb.d/schema.sql
    networks:
      - seo_network
    command: --default-authentication-plugin=mysql_native_password

  # Redis for session storage (optional but recommended)
  redis:
    image: redis:7-alpine
    container_name: seo_timeline_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - seo_network

  # Main Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: seo_timeline_app
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: production
      DATABASE_URL: mysql://seo_user:seo_password@mysql:3306/seo_timeline
      SESSION_SECRET: your-super-secret-session-key-change-this-in-production
      REDIS_URL: redis://redis:6379
      PORT: 5000
    depends_on:
      - mysql
      - redis
    networks:
      - seo_network
    volumes:
      - ./uploads:/app/uploads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Development version (uncomment for development)
  # app-dev:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.dev
  #   container_name: seo_timeline_dev
  #   restart: unless-stopped
  #   ports:
  #     - "5000:5000"
  #     - "5173:5173"
  #   environment:
  #     NODE_ENV: development
  #     DATABASE_URL: postgresql://seo_user:seo_password@postgres:5432/seo_timeline
  #     SESSION_SECRET: dev-secret-key
  #     REDIS_URL: redis://redis:6379
  #   depends_on:
  #     - postgres
  #     - redis
  #   networks:
  #     - seo_network
  #   volumes:
  #     - .:/app
  #     - /app/node_modules

volumes:
  mysql_data:
  redis_data:

networks:
  seo_network:
    driver: bridge